{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"text-center fst-italic fw-bold\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Please do not refresh the page.\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_progress_circular = _resolveComponent(\"v-progress-circular\");\n  const _component_v_overlay = _resolveComponent(\"v-overlay\");\n  return _openBlock(), _createBlock(_component_v_overlay, {\n    \"model-value\": $data.overlay,\n    class: \"align-center justify-center\",\n    persistent: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, _toDisplayString($data.proceed), 1 /* TEXT */), _hoisted_2, _createVNode(_component_v_progress_circular, {\n      color: \"primary\",\n      size: \"64\",\n      indeterminate: \"\"\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model-value\"]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createBlock","_component_v_overlay","$data","overlay","persistent","default","_withCtx","_hoisted_1","_toDisplayString","proceed","_hoisted_2","_createVNode","_component_v_progress_circular","color","size","indeterminate","_"],"sources":["D:\\Documents\\ticket-booking\\Museum-completed\\src\\components\\RazorPayment.vue"],"sourcesContent":["<template>\r\n  <v-overlay :model-value=\"overlay\" class=\"align-center justify-center\" persistent>\r\n    <div class=\"text-center fst-italic  fw-bold \">\r\n      <p>{{ proceed }}</p>\r\n        <p>Please do not refresh the page.</p>\r\n      <v-progress-circular color=\"primary\" size=\"64\" indeterminate></v-progress-circular>\r\n    </div>\r\n  </v-overlay>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      overlay: true,\r\n      script: `https://checkout.razorpay.com/v1/checkout.js`,\r\n      order_id: null,\r\n      signature: null,\r\n      pay_id: null,\r\n      url: this.$store.getters.getUrl,\r\n      proceed: 'You are being redirected to payment gateway.',\r\n      razorPayScript: null\r\n    }\r\n  },\r\n  computed: {\r\n    details() {\r\n      return this.$store.getters.getDetails\r\n    },\r\n    razor() {\r\n      return this.$store.getters.getRazor\r\n    },\r\n  },\r\n  methods: {\r\n    async loadRazorPay() {\r\n      return new Promise(resolve => {\r\n        const script = document.createElement('script')\r\n        script.src = this.script\r\n        script.onload = () => {\r\n          resolve(true);\r\n          this.overlay = false;\r\n        }\r\n        script.onerror = () => {\r\n          resolve(false)\r\n        }\r\n        document.body.appendChild(script)\r\n        this.razorpayScript = script;\r\n      })\r\n    },\r\n    removeRazorPayScript() {\r\n      // Remove the Razorpay script element from the DOM\r\n      if (this.razorpayScript && this.razorpayScript.parentNode) {\r\n        this.razorpayScript.parentNode.removeChild(this.razorpayScript);\r\n        const elementsToRemove = document.body.getElementsByClassName('razorpay-container');\r\n\r\n        // Convert HTMLCollection to array and loop through each element to remove it\r\n        Array.from(elementsToRemove).forEach(element => {\r\n          element.remove();\r\n        });\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    const result = await this.loadRazorPay()\r\n    if (!result) {\r\n      alert('Failed to load razorpay script')\r\n      return\r\n    }\r\n    const options = {\r\n      key: this.razor.razorpayKeyId,\r\n      amount: this.razor.amount,\r\n      currency: this.razor.currency,\r\n      name: `Aksharam Museum`,\r\n      description: `Description of the payment`,\r\n      order_id: this.razor.orderId,\r\n\r\n      handler: async (response) => {\r\n        this.pay_id = response.razorpay_payment_id;\r\n        this.order_id = response.razorpay_order_id;\r\n        this.signature = response.razorpay_signature;\r\n        this.$store.commit('setPayment', this.pay_id)\r\n        // console.log(this.pay_id);\r\n        try {\r\n          const response1 = await axios.post(`${this.url}/api/payment/verify-payment`, {\r\n            \"orderId\": this.order_id,\r\n            \"paymentId\": this.pay_id,\r\n            \"signature\": this.signature,\r\n          });\r\n\r\n          if (response1.status === 200) {\r\n            this.$router.push('/loading_ticket')\r\n          }\r\n        }\r\n        catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n      prefill: {\r\n        name: this.details.name,\r\n        email: this.details.email,\r\n        contact: this.details.mobile\r\n      },\r\n      \"theme\": {\r\n        \"color\": \"#388E3C\"\r\n      },\r\n    };\r\n    const paymentObject = new window.Razorpay(options);\r\n    paymentObject.on('payment.failed', (response) => {\r\n      console.log('Payment failed event triggered');\r\n      console.log('Response:', response);\r\n\r\n      const proceed = confirm(`${response.error.description}. Do you want to proceed to another payment method?`);\r\n      console.log('Proceed:', proceed);\r\n\r\n      if (!proceed) {\r\n        this.proceed = 'You are being redirected to home page.'\r\n        this.overlay = true;\r\n        paymentObject.close();\r\n        setTimeout(() => {\r\n          sessionStorage.clear();\r\n          this.removeRazorPayScript(); \r\n          this.$router.push('/');\r\n        }, 3000);\r\n      }\r\n    });\r\n    paymentObject.open();\r\n  },\r\n  beforeUnmount() {\r\n    this.removeRazorPayScript();\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EAESA,KAAK,EAAC;AAAkC;gCAEzCC,mBAAA,CAAsC,WAAnC,iCAA+B;;;;uBAHxCC,YAAA,CAMYC,oBAAA;IANA,aAAW,EAAEC,KAAA,CAAAC,OAAO;IAAEL,KAAK,EAAC,6BAA6B;IAACM,UAAU,EAAV;;IADxEC,OAAA,EAAAC,QAAA,CAEI,MAIM,CAJNP,mBAAA,CAIM,OAJNQ,UAIM,GAHJR,mBAAA,CAAoB,WAAAS,gBAAA,CAAdN,KAAA,CAAAO,OAAO,kBACXC,UAAsC,EACxCC,YAAA,CAAmFC,8BAAA;MAA9DC,KAAK,EAAC,SAAS;MAACC,IAAI,EAAC,IAAI;MAACC,aAAa,EAAb;;IALrDC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}